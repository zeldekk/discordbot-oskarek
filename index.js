const { Client, IntentsBitField, EmbedBuilder } = require('discord.js');
const config = require('./config.json');

const client = new Client({
    intents: [
        IntentsBitField.Flags.GuildMessages,
        IntentsBitField.Flags.Guilds,
        IntentsBitField.Flags.GuildMembers,
        IntentsBitField.Flags.MessageContent,
    ]
});

client.on('ready', () => {
    console.log(client.user.tag + ' jest onlajn');
    client.user.setActivity({
        name: 'Brawl Stars'
    })
});

const bociki = ["Szymon Bialik [9/11]", "Justyna CzakaÅ„ska [8/11]", "Karolina Michalik [10/11]", "Katarzyna WÄ™grzyn [9/11]", "Magda KiljaÅ„ska [5/11]", "Oliwia Rojek [7/11]", "Maciej Macura [9/11]", "Jakub Kasperski [6/11]", "PaweÅ‚ Pilipczuk [11/11]", "Bartosz Trytytka [11/11]", "Jakub PiÄ™tko [11/11]", "Jan WÅ‚odarczyk [10/11]", "Szymon FrÄ…czek [12/11]"];

client.on('messageCreate', async message => {
    if (message.author.bot) return;
    if (message.content.toLowerCase() === '<@1242565145410928640>') {
        message.reply('bocik'); 
    }
    if (message.content.toLowerCase() === 'bocik' || message.content.toLowerCase().includes(' bocik') ) {
        message.reply('nie bo ty :shit: :index_pointing_at_the_viewer:')
    }
    if (message.content.toLowerCase().includes('nigga')) {
        message.reply(':repeat: :foot_tone5:')
    }
    if (message.content.toLowerCase() === 'https://tenor.com/view/cryptoflash-crypto-flash-tattoo-vintage-gif-27569875') {
        message.reply('to ty');
    }
    if (message.content.toLowerCase().includes('maciej')) {
        const formattedText = `
Freaky Maciej
 Freaky Maciej
  Freaky Maciej
   Freaky Maciej
    Freaky Maciej
     Freaky Maciej
      Freaky Maciej
       Freaky Maciej
        Freaky Maciej
         Freaky Maciej
          Freaky Maciej
           Freaky Maciej
            Freaky Maciej
             Freaky Maciej
              Freaky Maciej
               Freaky Maciej
                Freaky Maciej
                 Freaky Maciej
                  Freaky Maciej
                   Freaky Maciej
                    Freaky Maciej
                     Freaky Maciej
                    Freaky Maciej
                   Freaky Maciej
                  Freaky Maciej
                 Freaky Maciej
                Freaky Maciej
               Freaky Maciej
              Freaky Maciej
             Freaky Maciej
            Freaky Maciej
           Freaky Maciej
          Freaky Maciej
         Freaky Maciej
        Freaky Maciej
       Freaky Maciej
      Freaky Maciej
     Freaky Maciej
    Freaky Maciej
   Freaky Maciej
  Freaky Maciej
 Freaky Maciej
Freaky Maciej
 Freaky Maciej
  Freaky Maciej
   Freaky Maciej
    Freaky Maciej
     Freaky Maciej
      Freaky Maciej
       Freaky Maciej
        Freaky Maciej
         Freaky Maciej
          Freaky Maciej
           Freaky Maciej
            Freaky Maciej
             Freaky Maciej
              Freaky Maciej
               Freaky Maciej
                Freaky Maciej
                 Freaky Maciej
                  Freaky Maciej
                   Freaky Maciej
                    Freaky Maciej
                     Freaky Maciej
`;

        const message2 = await message.reply(formattedText);
        setTimeout(() => {
            message2.delete();
        }, 2500);
    }
    
    if (message.content.toLowerCase() === 'geo' || message.content.toLocaleLowerCase() === 'geometria') {
        message.reply(`Nigdy nie rozumiaÅ‚em po co ludzie czytajÄ… treÅ›ci z geometrii, to czy przeczytasz treÅ›Ä‡ czy nie nie ma Å¼adnego wpÅ‚ywu na wynik. PrzecieÅ¼ zadania z geometrii sÄ… doÅ‚oÅ¼one do zestawu dla beki i i tak nie da siÄ™ ich zrobiÄ‡. GdzieÅ› w krzakach siedzi Komitet GÅ‚Ã³wny z ukrytÄ… kamerÄ… i siÄ™ Å›miejÄ… "haha jaki debil prÃ³buje geometriÄ™ zrobiÄ‡". Jeszcze potem na omÃ³wieniach, Å¼eby ludzie siÄ™ nie ziornÄ™li, Å¼e to Å¼art to robiÄ… jakieÅ› fejkowe "dowody". Wychodzi jakiÅ› typ, macha rÄ™kami przez 20 min, "jednokÅ‚adnoÅ›Ä‡ ch\\*j k\\*rwa". Tu sobie dorysujemy punkt i nawet nie udowodnimy, Å¼e istnieje. Tu sobie przedÅ‚uÅ¼ymy odcinek i on siÄ™ przetnie z naszÄ… prostÄ… akurat tam gdzie trzeba, i teÅ¼ bez dowodu "bo to widaÄ‡ z rysunku hehe". I ludzie siÄ™ na to nabierajÄ… i nadal myÅ›lÄ… Å¼e zadania z geometrii da siÄ™ zrobiÄ‡. W ogÃ³le, kto to widziaÅ‚, Å¼eby na OM byÅ‚y zadania, gdzie trzeba rysowaÄ‡. To jest olimpiada MATEMATYCZNA, jak ktoÅ› chce sobie rysowaÄ‡, to niech idzie na OlimpiadÄ™ PlastycznÄ… czy coÅ›.`)
    }

    if (message.content.toLowerCase() === '!losowybocik') {
        message.reply(bociki[Math.floor(Math.random()*bociki.length)]);
    }

    if (message.content.toLowerCase() === 'ğŸ¤–') {
        message.reply(':mirror:');  
    }
    
    if (message.content.toLowerCase() === 'alien') {
        message.reply('ğŸ‘½ğŸ‘½ğŸ‘½ğŸ‘½ğŸ‘½ğŸ‘½ğŸ‘½ğŸ‘½ğŸ‘½ğŸ‘½ğŸ‘½ğŸ‘½ğŸ‘½ğŸ‘½ğŸ‘½ğŸ‘½ğŸ‘½ğŸ‘½ğŸ‘½ğŸ‘½ğŸ‘½ğŸ‘½ğŸ‘½ğŸ‘½ğŸ‘½ğŸ‘½ğŸ‘½ğŸ‘½ğŸ‘½ğŸ‘½');
    }
    if (message.content.toLowerCase() === 'alieni') {
        for (let i = 0; i < 5; i++) {
            setTimeout(() => {
                message.reply(':alien:');
            }, 200);
        }
    }

    if (message.content.toLocaleLowerCase() === 'alienoid') {
        const image = './Bez_nazwy.jpg';
        await message.reply({files: [image]});
    }
    /* !nwords command
    if (message.content.toLocaleLowerCase().startsWith('!nwords')) {
        let helloCount = 0;
        let targetUser = message.mentions.users.first() || message.author;
        let messages;
        let lastMessageId = null;

        do {
            messages = await message.channel.messages.fetch({ limit: 100, before: lastMessageId });
            messages.forEach(msg => {
                if (msg.author.id === targetUser.id && msg.content.toLowerCase().includes('nigger')) {
                    helloCount += (msg.content.toLowerCase().match(/nigger/g) || []).length;
                }
                if (msg.author.id === targetUser.id && msg.content.toLocaleLowerCase().includes('nigga')) {
                    helloCount += (msg.content.toLowerCase().match(/nigga/g) || []).length;
                }
            });
            lastMessageId = messages.size > 0 ? messages.last().id : null;
        } while (messages.size > 0);

        message.channel.send(`${targetUser.username} powiedziaÅ‚ nworda ${helloCount} razy.`);
    }
    */

    if (message.content.toLowerCase() === ':nerd:') {
        message.reply(':nerd: :repeat:');
    }
    // !eval command =-=-=-
    if (message.content.startsWith('!eval')) {
        if ((message.author.id === '592017236361871363' && message.content.toLowerCase().includes('message')) || (message.author.id === '1076212139729092648' && message.content.toLowerCase().includes('message'))) return;
        const code = message.content.slice(6);
        try {
            let result = await eval(code);

            const evalEmbed = new EmbedBuilder().setTitle('eval').addFields({name: 'kod',value: `\`\`\`js\n${code}\`\`\``},{name: 'result', value: `\`\`\`${result.toString()}\`\`\``}).setColor('Random')
            message.channel.send({embeds: [evalEmbed]});
        } catch (error) {
            message.channel.send(`\`\`\`js\n${error}\n\`\`\``);
        }
    }

   if (message.content.startsWith('!chesscom')) {
    const msgArray = message.content.split(' '); //[!chesscom, arg, subArg]
    const arg = msgArray[1];
    const subArg = msgArray[2];
    switch (arg) {
        case 'profile' || 'player' || 'profil' || 'gracz':
            const profres = (await fetch(`https://api.chess.com/pub/player/${subArg}`));
            if (!res.ok) { message.reply(':x: bÅ‚ont'); return; }
            const profdata = profres.json();
            const profembed = new EmbedBuilder().setTitle('Profil UÅ¼ytkownika').setThumbnail(data.avatar).addFields(
                {
                    name: 'Nazwa UÅ¼ytkownika',
                    value: data.username,
                    inline: true
                },
                {
                    name: 'TytuÅ‚',
                    value: data.title || 'Brak',
                    inline: true
                },
                {
                    name: 'Kraj',
                    value: `${(fetch(data.country)).json().name} :flag_${(await fetch(data.country)).json().code.toLowerCase()}:}`,
                    inline: false
                },
                {
                    name: 'Ostatnio Online',
                    value: `t:${data.last_online}:R`,
                    inline: true
                },
                {
                    name: 'Data doÅ‚Ä…czenia',
                    value: `t:${data.joined}:D`,
                    inline: true
                },
                {
                    name: 'Dywizja',
                    value: data.league
                }
            )
            message.reply({embeds: [profembed]});
            break;
        case 'stats' || 'statistics' || 'staty' || 'statystyki':
            const statres = await fetch(`https://api.chess.com/pub/player/${subArg}/stats`);
            if (res.ok) { message.reply(':x: bÅ‚ont'); return; }
            const statdata = statres.json();
            const statembed = new EmbedBuilder().setTitle('Statystyki Gracza').setThumbnail(profdata.avatar).addFields(
                {
                    name: '<:bullet:1016772646882508870> Bullety',
                    value: `Ostatnia Partia:\n\tRanking:${statdata.chess_bullet.last.rating}\n\t:Data: <t:${statdata.chess_bullet.last.date}:D>\nSzczyt:\n\tRanking: ${statdata.chess_bullet.best.rating}\n\tData: <t:${statdata.chess_bullet.best.date}:D>\n\t[Link Do Gry](${statdata.chess_bullet.best.game})\nWyniki:\n\tWygrane:${statdata.chess_bullet.record.win}:\n\tPrzegrane:${statdata.chess_bullet.record.loss}:\n\tRemisy:${statdata.chess_bullet.record.draw}`
                },
                {
                    name: '<:blitz:1016772640054194216> Blitzy',
                    value: `Ostatnia Partia:\n\tRanking:${statdata.chess_blitz.last.rating}\n\t:Data: <t:${statdata.chess_blitz.last.date}:D>\nSzczyt:\n\tRanking: ${statdata.chess_blitz.best.rating}\n\tData: <t:${statdata.chess_blitz.best.date}:D>\n\t[Link Do Gry](${statdata.chess_blitz.best.game})\nWyniki:\n\tWygrane:${statdata.chess_blitz.record.win}:\n\tPrzegrane:${statdata.chess_blitz.record.loss}:\n\tRemisy:${statdata.chess_blitz.record.draw}`
                },
                {
                    name: '<:rapid:1016802313849012395> Blitzy',
                    value: `Ostatnia Partia:\n\tRanking:${statdata.chess_rapid.last.rating}\n\t:Data: <t:${statdata.chess_rapid.last.date}:D>\nSzczyt:\n\tRanking: ${statdata.chess_rapid.best.rating}\n\tData: <t:${statdata.chess_rapid.best.date}:D>\n\t[Link Do Gry](${statdata.chess_rapid.best.game})\nWyniki:\n\tWygrane:${statdata.chess_rapid.record.win}:\n\tPrzegrane:${statdata.chess_rapid.record.loss}:\n\tRemisy:${statdata.chess_rapid.record.draw}`
                },
            )
            break;
    }
   }
});
client.on('messageDelete', async message => {
    if (message.author.bot) return;
    const embed = new EmbedBuilder()
    .setAuthor({name: message.author.username, iconURL: message.author.avatarURL()})
    .setDescription(message.content || 'null')
    .setColor('Random')
    message.channel.send({embeds: [embed]});
});

client.on('messageUpdate', (oldMessage, newMessage) => {
    if (oldMessage.content === newMessage.content) return;
    if (oldMessage.author.bot) return;

    const embed = new EmbedBuilder()
        .setAuthor({
            name: newMessage.author.username,
            iconURL: newMessage.author.avatarURL()
        })
        .addFields(
            { name: 'Przed edytowaniem', value: oldMessage.content || 'null', inline: false },
            { name: 'Po edytowaniu', value: newMessage.content || 'null', inline: false }
        )
        .setColor('Random')
    newMessage.channel.send({ embeds: [embed] });
});

client.login(config.token);